# Makefile that creates an executable "school"
# rules: all, clean, fclean, oclean, re
# variables: CC, SRC, OBJ, NAME, RM, CFLAGS
# The all rule should recompile only the updated source files
# The clean, oclean, fclean, re rules should never fail
# Not allowed to have a list of all the .o files
# Have to use $(RM) for the cleaning up rules, but you are not allowed to set the RM variable
# Nnot allowed to use the string $(CC) more than once in your Makefile
# Only allowed to use the string $(RM) twice in your Makefile
# Not allowed to use the string $(CFLAGS) (but the compiler should still use the flags you set in this variable)
# Not allowed to have an $(OBJ) rule
# Not allowed to use the %.o: %.c rule
# Makefile should work even if there is a file in the folder that has the same name as one of your rule
# Makefile should not compile if the header file m.h is missing

CC = gcc
SRC = main.c school.c
OBJ = $(SRC:.c=.o)
NAME = school
CFLAGS = -Wall -Werror -Wextra -pedantic
.PHONY: oclean fclean re clean all

all: m.h $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

clean:
	$(RM) *~ $(NAME)

oclean:
	$(RM) $(OBJ)

fclean: clean oclean

re: fclean all
